#reset password
class RequestResetEmailView(View):
      def get(self,request):
            return render(request,'auth/request-reset-email.html')
      
      def post(self,request):
            email=request.POST['email']
            user=User.objects.filter(email=email)

            if user.exists():
                  current_site=get_current_site(request)
                  email_sub="[Reset your Password]"
                  message=render_to_string('auth/reset-user-password.html',{
                        
                        'domain':current_site.domain,
                        'uid':urlsafe_base64_encode(force_bytes(user[0].pk)),
                        'token':PasswordResetTokenGenerator().make_token(user[0])
                  })

                  email_message=EmailMessage(email_sub,message,settings.EMAIL_HOST_USER,[email])
                  EmailThread(email_message).start()
                  messages.info(request,"we sent instructions to how reset password")
                  return render(request,'auth/request-reset-email.html')



            
class SetNewPassword(View):
       def get(self,request,uidb64,token):
              
              context={
                  'uidb64':uidb64,
                  'token':token
               }
              try:
                  user_id=force_str(urlsafe_base64_decode(uidb64))
                  user=User.objects.get(pk=user_id)
                  if not PasswordResetTokenGenerator().check_token(user,token):
                        messages.warning(request,"password reset link is in valid")
                        return render(request,'auth/request-reset-email.html')
              except DjangoUnicodeDecodeError as identifier:
                    pass

              return render(request,'auth/set-new-password.html',context)
      
       def post(self,request,uidb64,token):
              context={
                   'uidb64':uidb64,
                  'token':token
              
                }
              password=request.POST['password']
              confirm_password=request.POST['confirm_password']
              if password!=confirm_password:
                    messages.warning(request,"password is not matching")
                    return render(request,'auth/set-new-password.html',context)
              try:
                    user_id=force_str(urlsafe_base64_decode(uidb64))
                    user=User.objects.get(pk=user_id)
                    user.set_password(password)
                    user.save()
                    messages.success(request,"Password reset sucess. you can login with new password")
                    return redirect('/auth_app/handlelogin/')
              
              except DjangoUnicodeDecodeError as identifier:
                    messages.error(request,"Something went wrong")
                    return redirect('auth/set-new-password.html',context)
              return render(request,'auth/set-new-password.html',context)


       








def handlelogout(request):
    if request.user.is_authenticated:
        logout(request)

    # Redirect to the login page or any other page you prefer
    returnÂ redirect('/')